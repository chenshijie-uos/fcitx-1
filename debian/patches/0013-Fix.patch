From c8d3c13d7390807c5a29f62fc3bff1382d10f6ec Mon Sep 17 00:00:00 2001
From: xiao zhiguo <xiaozhiguo@uniontech.com>
Date: Thu, 6 Aug 2020 14:53:13 +0800
Subject: [PATCH 13/29] =?UTF-8?q?Fix:=20=E4=BF=AE=E5=A4=8D=E9=94=81?=
 =?UTF-8?q?=E5=B1=8F=E7=8A=B6=E6=80=81=E4=B8=8B=E6=98=BE=E7=A4=BA=E8=BE=93?=
 =?UTF-8?q?=E5=85=A5=E6=B3=95=E7=8A=B6=E6=80=81=E6=A0=8F=E9=97=AE=E9=A2=98?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Description: 根据com.deepin.dde.lockFront的Visible信号判断当前是否锁屏状态，从而隐藏状态栏。

Log: 修复锁屏状态下显示输入法状态栏问题

link: https://pms.uniontech.com/zentao/task-view-30163.html
---
 src/ui/classic/CMakeLists.txt |  3 +++
 src/ui/classic/MainWindow.c   |  7 ++++++
 src/ui/classic/MainWindow.h   |  1 +
 src/ui/classic/classicui.c    | 42 +++++++++++++++++++++++++++++++++++
 src/ui/classic/classicui.h    |  4 ++++
 5 files changed, 57 insertions(+)

diff --git a/src/ui/classic/CMakeLists.txt b/src/ui/classic/CMakeLists.txt
index f315ad1..cbd7d34 100644
--- a/src/ui/classic/CMakeLists.txt
+++ b/src/ui/classic/CMakeLists.txt
@@ -1,3 +1,6 @@
+include_directories(${DBUS_INCLUDE_DIRS})
+link_directories(${DBUS_LIBRARY_DIRS})
+
 set(FCITX_CLASSIC_UI_LINK_LIBS)
 if(_ENABLE_CAIRO)
   include_directories(${CAIRO_XLIB_INCLUDE_DIRS})
diff --git a/src/ui/classic/MainWindow.c b/src/ui/classic/MainWindow.c
index 73b7bd2..71d690c 100644
--- a/src/ui/classic/MainWindow.c
+++ b/src/ui/classic/MainWindow.c
@@ -63,6 +63,12 @@ static inline boolean MainWindowShouldShow(MainWindow* mainWindow)
     FcitxClassicUI* classicui = window->owner;
     FcitxInstance *instance = window->owner->owner;
     FcitxInputContext2* ic2 = (FcitxInputContext2*) FcitxInstanceGetCurrentIC(instance);
+
+    /* 锁屏状态下不显示状态栏 by UT000591 for TaskID 30163 */
+    if (TRUE == mainWindow->isScreenLocked) {
+        return FALSE;
+    }
+    
     return (window->owner->hideMainWindow == HM_SHOW)
         || (window->owner->hideMainWindow == HM_AUTO && ((ic2 && ic2->switchBySwitchKey) || FcitxInstanceGetCurrentState(window->owner->owner) == IS_ACTIVE))
         || (window->owner->hideMainWindow == HM_HIDE_WHEN_TRAY_AVAILABLE
@@ -101,6 +107,7 @@ MainWindow* MainWindowCreate(FcitxClassicUI* classicui)
                              MainWindowEventHandler, mainWindow);
     FcitxX11AddCompositeHandler(classicui->owner,
                                 ReloadMainWindow, mainWindow);
+    mainWindow->isScreenLocked = FALSE;
     return mainWindow;
 }
 
diff --git a/src/ui/classic/MainWindow.h b/src/ui/classic/MainWindow.h
index 78d177a..4967b4f 100644
--- a/src/ui/classic/MainWindow.h
+++ b/src/ui/classic/MainWindow.h
@@ -49,6 +49,7 @@ typedef struct _MainWindow {
     FcitxXlibWindow parent;
     FcitxClassicUIStatus logostat;
     FcitxClassicUIStatus imiconstat;
+    gboolean isScreenLocked;
 } MainWindow;
 
 MainWindow* MainWindowCreate(FcitxClassicUI* classicui);
diff --git a/src/ui/classic/classicui.c b/src/ui/classic/classicui.c
index 6384bdb..4614131 100644
--- a/src/ui/classic/classicui.c
+++ b/src/ui/classic/classicui.c
@@ -47,6 +47,8 @@
 #include "fcitx-utils/utils.h"
 #include "module/notificationitem/fcitx-notificationitem.h"
 
+DBusHandlerResult ClassicuiDBusFilter(DBusConnection* connection, DBusMessage* msg, void* user_data);
+
 struct _FcitxSkin;
 static boolean MainMenuAction(FcitxUIMenu* menu, int index);
 static void UpdateMainMenu(FcitxUIMenu* menu);
@@ -171,6 +173,28 @@ void* ClassicUICreate(FcitxInstance* instance)
 
     classicui->waitDelayed = FcitxInstanceAddTimeout(instance, 0, ClassicUIDelayedInitTray, classicui);
 
+    /* 锁屏状态下不显示状态栏 by UT000591 for TaskID 30163 */
+    classicui->conn = FcitxDBusGetConnection(instance);
+    do {
+        if (NULL != classicui->conn){
+            DBusError err;
+            dbus_error_init(&err);
+
+            dbus_bus_add_match(classicui->conn, "type='signal',sender='com.deepin.dde.lockFront',interface='com.deepin.dde.lockFront'", &err);
+            dbus_connection_flush(classicui->conn);
+            if (dbus_error_is_set(&err)) {
+                FcitxLog(ERROR, "Match Error (%s)", err.message);
+                break;
+            }
+            
+            if (!dbus_connection_add_filter(classicui->conn, ClassicuiDBusFilter, classicui, NULL)) {
+                FcitxLog(ERROR, "No memory");
+                break;
+            }
+            dbus_error_free(&err);
+        }
+    }while(FALSE);
+
     return classicui;
 }
 
@@ -625,4 +649,22 @@ void ResizeSurface(cairo_surface_t** surface, int w, int h)
     *surface = newsurface;
 }
 
+/* 锁屏状态下不显示状态栏 by UT000591 for TaskID 30163 */
+DBusHandlerResult ClassicuiDBusFilter(DBusConnection* connection, DBusMessage* msg, void* user_data)
+{
+    FCITX_UNUSED(connection);
+    FcitxClassicUI* classicui = (FcitxClassicUI*) user_data;
+    boolean locked = false;
+    if (dbus_message_is_signal(msg, "com.deepin.dde.lockFront", "Visible")) {
+        DBusError error;
+        dbus_error_init(&error);
+        dbus_message_get_args(msg, &error, DBUS_TYPE_BOOLEAN, &locked , DBUS_TYPE_INVALID);
+        dbus_error_free(&error);
+
+        classicui->mainWindow->isScreenLocked = locked;
+        return DBUS_HANDLER_RESULT_HANDLED;
+    }
+    return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+}
+
 #include "fcitx-classic-ui-addfunctions.h"
diff --git a/src/ui/classic/classicui.h b/src/ui/classic/classicui.h
index f4d9fb6..4179e05 100644
--- a/src/ui/classic/classicui.h
+++ b/src/ui/classic/classicui.h
@@ -26,6 +26,8 @@
 #include "fcitx-utils/utarray.h"
 
 #include <X11/Xlib.h>
+#include <dbus/dbus.h>
+#include "module/dbus/fcitx-dbus.h"
 #include <cairo.h>
 #include "ui/cairostuff/cairostuff.h"
 
@@ -90,6 +92,8 @@ typedef struct _FcitxClassicUI {
 
     unsigned int epoch;
     uint64_t waitDelayed;
+
+    DBusConnection* conn;
 } FcitxClassicUI;
 
 FcitxRect GetScreenGeometry(FcitxClassicUI* classicui, int x, int y);
-- 
2.20.1

