From f7af11c2a3259d98bb638aa69c517ac7fca34369 Mon Sep 17 00:00:00 2001
From: xiao zhiguo <xiaozhiguo@uniontech.com>
Date: Thu, 27 Aug 2020 09:16:07 +0800
Subject: [PATCH 14/29] =?UTF-8?q?Fix:=20=E4=BF=AE=E5=A4=8D=E8=99=9A?=
 =?UTF-8?q?=E6=8B=9F=E9=94=AE=E7=9B=98=E5=9C=A8=E7=99=BB=E5=BD=95=E7=95=8C?=
 =?UTF-8?q?=E9=9D=A2=E4=B8=8D=E9=9A=90=E8=97=8F=E9=97=AE=E9=A2=98=E3=80=82?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Description: 根据com.deepin.dde.lockFront的Visible信号判断当前是否锁屏状态，从而隐藏虚拟键盘。

Log: 修复虚拟键盘在登录界面不隐藏问题。

link: https://pms.uniontech.com/zentao/bug-view-44159.html
---
 src/module/vk/CMakeLists.txt |  3 +++
 src/module/vk/vk.c           | 47 ++++++++++++++++++++++++++++++++++++
 src/ui/classic/classicui.c   |  2 +-
 3 files changed, 51 insertions(+), 1 deletion(-)

diff --git a/src/module/vk/CMakeLists.txt b/src/module/vk/CMakeLists.txt
index ff4ac45..e7701fb 100644
--- a/src/module/vk/CMakeLists.txt
+++ b/src/module/vk/CMakeLists.txt
@@ -1,3 +1,6 @@
+include_directories(${DBUS_INCLUDE_DIRS})
+link_directories(${DBUS_LIBRARY_DIRS})
+
 set(FCITX_VK_LINK_LIBS)
 if(_ENABLE_CAIRO)
   include_directories(${CAIRO_XLIB_INCLUDE_DIRS})
diff --git a/src/module/vk/vk.c b/src/module/vk/vk.c
index ab967e5..441f252 100644
--- a/src/module/vk/vk.c
+++ b/src/module/vk/vk.c
@@ -24,6 +24,8 @@
 #include <cairo.h>
 #include <libintl.h>
 #include <cairo-xlib.h>
+#include <dbus/dbus.h>
+#include "module/dbus/fcitx-dbus.h"
 
 #include "fcitx/fcitx.h"
 #include "fcitx/module.h"
@@ -90,11 +92,15 @@ typedef struct _FcitxVKState {
     boolean         bVK;
     FcitxUIMenu     vkmenu;
     FcitxInstance* owner;
+
+    DBusConnection* conn;
 } FcitxVKState;
 
 const char            vkTable[VK_NUMBERS + 1] = "`1234567890-=qwertyuiop[]\\asdfghjkl;'zxcvbnm,./";
 const char            strCharTable[] = "`~1!2@3#4$5%6^7&8*9(0)-_=+[{]}\\|;:'\",<.>/?";    //用于转换上/下档键
 
+DBusHandlerResult VKStateDBusFilter(DBusConnection* connection, DBusMessage* msg, void* user_data);
+
 static boolean VKWindowEventHandler(void* arg, XEvent* event);
 static void
 VKInitWindowAttribute(FcitxVKState* vkstate, Visual ** vs, Colormap * cmap,
@@ -185,6 +191,28 @@ void *VKCreate(FcitxInstance* instance)
 
     FcitxUIRegisterMenu(instance, &vkstate->vkmenu);
 
+    /* 锁屏状态下不显示虚拟键盘 by UT000591 for BugID 44159 */
+    vkstate->conn = FcitxDBusGetConnection(instance);
+    do {
+        if (NULL != vkstate->conn){
+            DBusError err;
+            dbus_error_init(&err);
+
+            dbus_bus_add_match(vkstate->conn, "type='signal',sender='com.deepin.dde.lockFront',interface='com.deepin.dde.lockFront'", &err);
+            dbus_connection_flush(vkstate->conn);
+            if (dbus_error_is_set(&err)) {
+                FcitxLog(ERROR, "Match Error (%s)", err.message);
+                break;
+            }
+            
+            if (!dbus_connection_add_filter(vkstate->conn, VKStateDBusFilter, vkstate, NULL)) {
+                FcitxLog(ERROR, "No memory");
+                break;
+            }
+            dbus_error_free(&err);
+        }
+    }while(FALSE);
+
     return vkstate;
 }
 
@@ -800,5 +828,24 @@ void ReloadVK(void* arg)
     LoadVKMapFile(vkstate);
 }
 
+/* 锁屏状态下不显示虚拟键盘 by UT000591 for TaskID 44159 */
+DBusHandlerResult VKStateDBusFilter(DBusConnection* connection, DBusMessage* msg, void* user_data)
+{
+    FCITX_UNUSED(connection);
+    FcitxVKState* vkstate = (FcitxVKState*) user_data;
+    boolean locked = false;
+    if (dbus_message_is_signal(msg, "com.deepin.dde.lockFront", "Visible")) {
+        DBusError error;
+        dbus_error_init(&error);
+        dbus_message_get_args(msg, &error, DBUS_TYPE_BOOLEAN, &locked , DBUS_TYPE_INVALID);
+        dbus_error_free(&error);
+
+        if (locked && GetVKState(vkstate)) {
+            ToggleVKState(vkstate);
+        }
+        return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+    }
+    return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+}
 
 // kate: indent-mode cstyle; space-indent on; indent-width 0;
diff --git a/src/ui/classic/classicui.c b/src/ui/classic/classicui.c
index 4614131..a5c8411 100644
--- a/src/ui/classic/classicui.c
+++ b/src/ui/classic/classicui.c
@@ -662,7 +662,7 @@ DBusHandlerResult ClassicuiDBusFilter(DBusConnection* connection, DBusMessage* m
         dbus_error_free(&error);
 
         classicui->mainWindow->isScreenLocked = locked;
-        return DBUS_HANDLER_RESULT_HANDLED;
+        return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
     }
     return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
-- 
2.20.1

